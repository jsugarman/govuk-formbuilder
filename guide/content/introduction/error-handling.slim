---
title: Error handling
---

h1.govuk-heading-xl Error handling

p.govuk-body
  ' When a form is submitted and there is a problem, communicating that problem
    in a clear and concise manner is imperative. The form builder provides two
    ways to do this.

p.govuk-body
  ' Error messages are displayed immediately above the offending field.
    They should tell the user how to fix the problem.

p.govuk-body
  ' Additionally a summary of all the problems with the submission should be
    displayed at the top of the page. Every error in the summary is a hyperlink
    that when followed focusses on the problematic field.

p.govuk-body
  ' This behaviour is provided by the form builder without any need for
    extra configuration.

== render('/partials/example-fig.*',
  caption: "A form with multiple errors",
  code: form_with_multiple_errors,
  sample_data: departments_data_raw,
  show_errors: :fields,
  hide_data: true,
  hide_html_output: true)

== render('/partials/example-fig.*',
  caption: "Linking errors on the base object to specific fields",
  code: form_with_errors_on_object_base,
  sample_data: departments_data_raw,
  show_errors: :base,
  hide_data: true,
  hide_html_output: false) do

  p.govuk-body
    | Some errors don't apply to a specific field but the object as a whole.
      The GOV.UK Design System guidelines suggest that in this case, the error
      summary link should take the user to the first field. As the form builder
      doesn't know the order in which fields will be rendered, it must be specified.

== render('/partials/example-fig.*',
  caption: "Custom summary error presenter injection",
  code: form_with_presenter_injection,
  sample_data: departments_data_raw,
  show_errors: :presenters,
  hide_data: true,
  hide_html_output: true) do

  p.govuk-body
    | Although the #{link_to('GDS design system recommends', 'https://design-system.service.gov.uk/components/error-summary/', target: '_blank').html_safe} that you use the same summary error message as that on the field there may be situations in which the summary level wording can be used to provide more or less context. Forms containing repeatable nested fields, for example, could use the summary message to clearly point to an attribute error instance.

  p.govuk-body
    | In such cases a custom error presenter that responds to "summary_error_for(attribute)"
      can be supplied.

    pre.example-input
      code.highlight.language-ruby
        | class ErrorPresenter
            def summary_error_for(attribute)
              "Custom summary error for \#{attribute}!"
            end
          end

== render('/partials/related-info.*', links: error_handling_info)
